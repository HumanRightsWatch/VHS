version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  local_minio_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: video_downloading_platform_local_django
    depends_on:
      - postgres
      - redis
      - minio
      - playwright
      - elasticsearch
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  redis:
    image: redis:6

  worker:
    <<: *django
    image: video_downloading_platform_local_worker
    depends_on:
      - redis
      - postgres
      - minio
      - playwright
      - elasticsearch
    volumes:
      - .:/app:z
    ports: []
    command: /start-worker

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: video_downloading_platform_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres
    ports:
      - "5432:5432"

  minio:
    image: quay.io/minio/minio:RELEASE.2022-01-08T03-11-54Z
    volumes:
      - local_minio_data:/data
    env_file:
      - ./.envs/.local/.django
    command: server /data
    ports:
      - "9000:9000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  playwright:
    image: ghcr.io/piroguetoolsuite/playwright-rest-api:main
    container_name: video_downloading_platform_local_playwright
    restart: unless-stopped
  elasticsearch:
    image: elasticsearch:8.4.1
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type='single-node'
      - xpack.security.enabled='false'
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
  kibana:
    image: kibana:8.4.1
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

#  docs:
#    image: video_downloading_platform_local_docs
#    build:
#      context: .
#      dockerfile: ./compose/local/docs/Dockerfile
#    env_file:
#      - ./.envs/.local/.django
#    volumes:
#      - ./docs:/docs:z
#      - ./config:/app/config:z
#      - ./video_downloading_platform:/app/video_downloading_platform:z
#    ports:
#      - "7000:7000"
#    command: /start-docs
#
#  node:
#    build:
#      context: .
#      dockerfile: ./compose/local/node/Dockerfile
#    image: video_downloading_platform_local_node
#    depends_on:
#      - django
#    volumes:
#      - .:/app:z
#      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
#      - /app/node_modules
#    command: npm run dev
#    ports:
#      - "3000:3000"
#      # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
#      - "3001:3001"
