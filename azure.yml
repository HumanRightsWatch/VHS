version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_minio_data: {}

services:
  django:
    image: ghcr.io/humanrightswatch/vhs:main
    depends_on:
      - postgres
      - redis
      - minio
    env_file:
      - ./.env
    restart: always
    command: /start
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: video_downloading_platform_production_postgres
    volumes:
      - /home/azureuser/vhs_data/postgres_data:/var/lib/postgresql/data:Z
      - /home/azureuser/vhs_data/postgres_data_backups:/backups:z
    env_file:
      - ./.env
    restart: always

  worker:
    image: ghcr.io/humanrightswatch/vhs:main
    depends_on:
      - redis
      - postgres
      - minio
    env_file:
      - ./.env
    ports: []
    command: /start-worker
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  minio:
    image: minio/minio:RELEASE.2021-06-17T00-10-46Z.hotfix.e6c50dc4c
    volumes:
      - /home/azureuser/vhs_data/minio_data:/data
    env_file:
      - ./.env
    command: server /data
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  watchtower:
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/timezone:/etc/timezone:ro
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
    restart: always
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: video_downloading_platform_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme:z
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    restart: always

  redis:
    image: redis:6
    restart: always
